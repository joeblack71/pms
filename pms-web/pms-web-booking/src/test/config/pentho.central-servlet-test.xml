<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

		xsi:schemaLocation="http://www.springframework.org/schema/beans 

		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <import resource="classpath*:central-service-test.xml"/>
    
    <!--
      - Due to the dispatcher mapping in web.xml and the default BeanNameUrlHandlerMapping
      - in this context, "http://localhost/example/test" will trigger this controller.
      -
      - Due to the default InternalResourceViewResolver, returned view names get treated
      - as internal resources, e.g. JSPs: "/test.jsp" or "/WEB-INF/jsp/test.jsp" will
      - render the respective file. So with the default resolver, controllers have to
      - specify the whole resource path as view name (see below for an alternative).
      -
      - HandlerMapping and ViewResolver are simple interfaces: Choose one of Spring's
      - provided implementations, or write your own one.
      -
      - A very simple Controller implementation could look as follows:
      -
      -   public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) {
      -     return new ModelAndView("/test.jsp");
      -   }
      -
    -->

	<!--bean id="jsonViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="order" value="1"/>
		<property name="location" value="/WEB-INF/central-jsonview.xml"/>
	</bean-->

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--property name="viewClass"><value>org.springframework.web.servlet.view.JstlView</value></property-->
		<property name="prefix"><value>/WEB-INF/jsp/</value></property>
		<property name="suffix"><value>.jsp</value></property>
	</bean>
	
	<bean id="defaultHandlerMapping" 
	   class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>

    <bean name="/Reservation.htm"
           class="com.myco.central.reservations.web.controller.ReservationController"
           scope="request">
        <property name="methodNameResolver" ref="central.reservations.ReservationMethodNameResolver"/>
        <property name="reservationManagerService" ref="pentho.central.reservationManagerService"/>
    </bean>
  
    <bean id="central.reservations.ReservationMethodNameResolver"
        class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
        <property name="paramName"><value>action</value></property>
        <property name="logicalMappings">
            <props>
                <prop key="registration">registration</prop>
            </props>
        </property>
    </bean>

</beans>